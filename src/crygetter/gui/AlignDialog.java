/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package crygetter.gui;

import crygetter.model.CryToxin;
import crygetter.utils.Utils;
import java.awt.Color;
import java.io.FileWriter;
import java.io.IOException;
import java.util.List;
import java.util.Properties;
import javax.swing.JDialog;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author David
 */
public class AlignDialog extends javax.swing.JDialog {

    private DefaultTableModel proteinTableModel;
    private Properties defaultConfigs;
    private Properties configs;
    
    /**
     * Creates new form AlignDialog
     */
    public AlignDialog( java.awt.Frame parent, boolean modal, List<CryToxin> ctList, Properties defaultConfigs, Properties configs ) {
        
        super( parent, modal );
        initComponents();
        
        this.defaultConfigs = defaultConfigs;
        this.configs = configs;
        
        proteinTableModel = new CryToxinTableModel(
                new String[]{ "Proteína", "Ordem(ns)", "Alinhar" }, 0 );
        
        for ( CryToxin ct : ctList ) {
            proteinTableModel.addRow( new Object[]{ ct, ct.proteinClass, false } );
        }
        
        tabelaProteinas.setModel( proteinTableModel );
        tabelaProteinas.getColumnModel().getColumn( 0 ).setCellRenderer( new CryToxinTableCellRender() );
        tabelaProteinas.getColumnModel().getColumn( 1 ).setCellRenderer( new CryToxinTableCellRender() );
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrpAlgoritmoAlinhamento = new javax.swing.ButtonGroup();
        btnGrpTipoAlinhamento = new javax.swing.ButtonGroup();
        painel = new javax.swing.JPanel();
        spProteinas = new javax.swing.JScrollPane();
        tabelaProteinas = new javax.swing.JTable();
        btnSelecionarTodas = new javax.swing.JButton();
        btnLimparSelecao = new javax.swing.JButton();
        painelSelecoes = new javax.swing.JPanel();
        btnCOL = new javax.swing.JButton();
        btnLEP = new javax.swing.JButton();
        btnDIP = new javax.swing.JButton();
        btnHEM = new javax.swing.JButton();
        btnHYM = new javax.swing.JButton();
        btnISO = new javax.swing.JButton();
        btnNEU = new javax.swing.JButton();
        btnORT = new javax.swing.JButton();
        btnBLA = new javax.swing.JButton();
        btnTHY = new javax.swing.JButton();
        btnTRI = new javax.swing.JButton();
        painelAlinhamento = new javax.swing.JPanel();
        radioProtInteira = new javax.swing.JRadioButton();
        radioPorDominio = new javax.swing.JRadioButton();
        checkD1 = new javax.swing.JCheckBox();
        checkD2 = new javax.swing.JCheckBox();
        checkD3 = new javax.swing.JCheckBox();
        checkFront = new javax.swing.JCheckBox();
        painelAlgoritmos = new javax.swing.JPanel();
        radioClustalO = new javax.swing.JRadioButton();
        radioClustalW = new javax.swing.JRadioButton();
        radioMUSCLE = new javax.swing.JRadioButton();
        btnConf = new javax.swing.JButton();
        btnAlinhar = new javax.swing.JButton();
        lblAguarde = new javax.swing.JLabel();
        painelSaida = new javax.swing.JPanel();
        spSaida = new javax.swing.JScrollPane();
        areaSaida = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Alinhamento de Proteínas");
        setResizable(false);

        painel.setBorder(javax.swing.BorderFactory.createTitledBorder("Proteínas"));

        tabelaProteinas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        spProteinas.setViewportView(tabelaProteinas);

        btnSelecionarTodas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crygetter/gui/icons/add.png"))); // NOI18N
        btnSelecionarTodas.setText("Selecionar Todas");
        btnSelecionarTodas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarTodasActionPerformed(evt);
            }
        });

        btnLimparSelecao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crygetter/gui/icons/delete.png"))); // NOI18N
        btnLimparSelecao.setText("Limpar Seleção");
        btnLimparSelecao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparSelecaoActionPerformed(evt);
            }
        });

        painelSelecoes.setBorder(javax.swing.BorderFactory.createTitledBorder("Seleção por Ordem"));

        btnCOL.setText("COL");

        btnLEP.setText("LEP");

        btnDIP.setText("DIP");

        btnHEM.setText("HEM");

        btnHYM.setText("HYM");

        btnISO.setText("ISO");

        btnNEU.setText("NEU");

        btnORT.setText("ORT");

        btnBLA.setText("BLA");

        btnTHY.setText("THY");

        btnTRI.setText("TRI");

        javax.swing.GroupLayout painelSelecoesLayout = new javax.swing.GroupLayout(painelSelecoes);
        painelSelecoes.setLayout(painelSelecoesLayout);
        painelSelecoesLayout.setHorizontalGroup(
            painelSelecoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelSelecoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelSelecoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnCOL)
                    .addComponent(btnNEU))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelSelecoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnLEP)
                    .addComponent(btnORT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelSelecoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnDIP)
                    .addComponent(btnBLA))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelSelecoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnHEM)
                    .addComponent(btnTHY))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelSelecoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnHYM)
                    .addComponent(btnTRI))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnISO)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelSelecoesLayout.setVerticalGroup(
            painelSelecoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelSelecoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelSelecoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCOL)
                    .addComponent(btnLEP)
                    .addComponent(btnDIP)
                    .addComponent(btnHEM)
                    .addComponent(btnHYM)
                    .addComponent(btnISO))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelSelecoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNEU)
                    .addComponent(btnORT)
                    .addComponent(btnBLA)
                    .addComponent(btnTHY)
                    .addComponent(btnTRI))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelAlinhamento.setBorder(javax.swing.BorderFactory.createTitledBorder("O que alinhar?"));

        btnGrpTipoAlinhamento.add(radioProtInteira);
        radioProtInteira.setSelected(true);
        radioProtInteira.setText("Proteína Completa");
        radioProtInteira.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioProtInteiraActionPerformed(evt);
            }
        });

        btnGrpTipoAlinhamento.add(radioPorDominio);
        radioPorDominio.setText("Por Domínios");
        radioPorDominio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioPorDominioActionPerformed(evt);
            }
        });

        checkD1.setText("Domínio 1");
        checkD1.setEnabled(false);

        checkD2.setText("Domínio 2");
        checkD2.setEnabled(false);

        checkD3.setText("Domínio 3");
        checkD3.setEnabled(false);

        checkFront.setText("Remover Fronteiras");
        checkFront.setEnabled(false);

        javax.swing.GroupLayout painelAlinhamentoLayout = new javax.swing.GroupLayout(painelAlinhamento);
        painelAlinhamento.setLayout(painelAlinhamentoLayout);
        painelAlinhamentoLayout.setHorizontalGroup(
            painelAlinhamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAlinhamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radioProtInteira)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAlinhamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioPorDominio)
                    .addGroup(painelAlinhamentoLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(painelAlinhamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkD2)
                            .addComponent(checkD1)
                            .addComponent(checkD3)
                            .addComponent(checkFront))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelAlinhamentoLayout.setVerticalGroup(
            painelAlinhamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAlinhamentoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(painelAlinhamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelAlinhamentoLayout.createSequentialGroup()
                        .addComponent(radioPorDominio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(checkD1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkD2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkD3))
                    .addComponent(radioProtInteira))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkFront))
        );

        painelAlgoritmos.setBorder(javax.swing.BorderFactory.createTitledBorder("Algoritmos de Alinhamento Múltiplo (MSA)"));

        btnGrpAlgoritmoAlinhamento.add(radioClustalO);
        radioClustalO.setSelected(true);
        radioClustalO.setText("Clustal Ômega");

        btnGrpAlgoritmoAlinhamento.add(radioClustalW);
        radioClustalW.setText("ClustalW");

        btnGrpAlgoritmoAlinhamento.add(radioMUSCLE);
        radioMUSCLE.setText("MUSCLE");

        btnConf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crygetter/gui/icons/wrench.png"))); // NOI18N
        btnConf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelAlgoritmosLayout = new javax.swing.GroupLayout(painelAlgoritmos);
        painelAlgoritmos.setLayout(painelAlgoritmosLayout);
        painelAlgoritmosLayout.setHorizontalGroup(
            painelAlgoritmosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAlgoritmosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radioClustalO)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radioClustalW)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioMUSCLE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConf)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelAlgoritmosLayout.setVerticalGroup(
            painelAlgoritmosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAlgoritmosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelAlgoritmosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnConf)
                    .addComponent(radioClustalO)
                    .addComponent(radioClustalW)
                    .addComponent(radioMUSCLE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnAlinhar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crygetter/gui/icons/accept.png"))); // NOI18N
        btnAlinhar.setText("Alinhar");
        btnAlinhar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlinharActionPerformed(evt);
            }
        });

        lblAguarde.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblAguarde.setForeground(new java.awt.Color(0, 102, 255));
        lblAguarde.setText(" ");

        javax.swing.GroupLayout painelLayout = new javax.swing.GroupLayout(painel);
        painel.setLayout(painelLayout);
        painelLayout.setHorizontalGroup(
            painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spProteinas, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(painelLayout.createSequentialGroup()
                        .addComponent(btnSelecionarTodas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimparSelecao))
                    .addComponent(painelAlgoritmos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelAlinhamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelSelecoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(painelLayout.createSequentialGroup()
                        .addComponent(btnAlinhar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAguarde, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelLayout.setVerticalGroup(
            painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(spProteinas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelLayout.createSequentialGroup()
                        .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSelecionarTodas)
                            .addComponent(btnLimparSelecao))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(painelSelecoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(painelAlinhamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(painelAlgoritmos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAlinhar)
                            .addComponent(lblAguarde))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelSaida.setBorder(javax.swing.BorderFactory.createTitledBorder("Saída dos Processos dos Algoritmos de Alinhamento Múltiplo"));

        areaSaida.setFont(new java.awt.Font("Courier New", 1, 13)); // NOI18N
        spSaida.setViewportView(areaSaida);

        javax.swing.GroupLayout painelSaidaLayout = new javax.swing.GroupLayout(painelSaida);
        painelSaida.setLayout(painelSaidaLayout);
        painelSaidaLayout.setHorizontalGroup(
            painelSaidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelSaidaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spSaida)
                .addContainerGap())
        );
        painelSaidaLayout.setVerticalGroup(
            painelSaidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelSaidaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spSaida, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(painel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelSaida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelSaida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(878, 728));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelecionarTodasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarTodasActionPerformed
        
        CryToxinTableModel tm = (CryToxinTableModel) tabelaProteinas.getModel();
        
        for ( int i = 0; i < tm.getRowCount(); i++ ) {
            tm.setValueAt( true, i, 2 );
        }
        
        tabelaProteinas.updateUI();
        
    }//GEN-LAST:event_btnSelecionarTodasActionPerformed

    private void btnLimparSelecaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparSelecaoActionPerformed
        
        CryToxinTableModel tm = (CryToxinTableModel) tabelaProteinas.getModel();
        
        for ( int i = 0; i < tm.getRowCount(); i++ ) {
            tm.setValueAt( false, i, 2 );
        }
        
        tabelaProteinas.updateUI();
        
    }//GEN-LAST:event_btnLimparSelecaoActionPerformed

    private void btnAlinharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlinharActionPerformed
        
        try {
            
            areaSaida.setText( "" );
            Utils.appendToPane( areaSaida, "", Color.BLACK, Color.WHITE );

            CryToxinTableModel tm = (CryToxinTableModel) tabelaProteinas.getModel();

            try ( FileWriter fwCry = new FileWriter( "temp/cry.fasta" ) ) {

                for ( int i = 0; i < tm.getRowCount(); i++ ) {
                    if ( (Boolean) tm.getValueAt( i, 2 ) ) {

                        CryToxin ct = (CryToxin) tm.getValueAt( i, 0 );

                        if ( radioProtInteira.isSelected() ) {
                            fwCry.write( Utils.formatAsFasta( ct.name, ct.proteinSequence, 60 ) );
                        } else {

                            StringBuilder sb = new StringBuilder();

                            if ( checkFront.isSelected() ) {

                                if ( checkD1.isSelected() ) {
                                    sb.append( ct.getDomainSequence( 1 ) );
                                }

                                if ( checkD2.isSelected() ) {
                                    sb.append( ct.getDomainSequence( 2 ) );
                                }

                                if ( checkD3.isSelected() ) {
                                    sb.append( ct.getDomainSequence( 3 ) );
                                }

                            } else {

                                int start = -1;
                                int end = -1;

                                if ( checkD1.isSelected() ) {
                                    start = ct.getDomain( 1 ).interval.start;
                                    end = ct.getDomain( 1 ).interval.end;
                                }

                                if ( checkD2.isSelected() ) {
                                    if ( start == -1 ) {
                                        start = ct.getDomain( 2 ).interval.start;
                                    }
                                    end = ct.getDomain( 2 ).interval.end;
                                }

                                if ( checkD3.isSelected() ) {
                                    if ( start == -1 ) {
                                        start = ct.getDomain( 3 ).interval.start;
                                    }
                                    end = ct.getDomain( 3 ).interval.end;
                                }

                                sb.append( ct.proteinSequence.substring( start - 1, end ) );

                            }

                            fwCry.write( Utils.formatAsFasta( ct.name, sb.toString(), 60 ) );

                        }

                        fwCry.write( "\n" );

                    }
                }

            }

            if ( radioClustalO.isSelected() ) {
                Utils.runClustalOUI( "cry.fasta", "saidaClustalO.aln", areaSaida, btnAlinhar, lblAguarde );
            } else if ( radioClustalW.isSelected() ) {
                Utils.runClustalWUI( "cry.fasta", "saidaClustalW.aln", areaSaida, btnAlinhar, lblAguarde );
            } else {
                Utils.runMUSCLEUI( "cry.fasta", "saidaMUSCLE.aln", areaSaida, btnAlinhar, lblAguarde );
            }

            //Utils.convertBiologicalDataFile( "saidaClustalO.aln", "fasta", "saidaClustalO.fasta" );
            //Utils.convertBiologicalDataFile( "saidaClustalW.aln", "fasta", "saidaClustalW.fasta" );

        } catch ( IOException | InterruptedException exc ) {
            Utils.showExceptionMessage( this, exc );
        }
        
    }//GEN-LAST:event_btnAlinharActionPerformed

    private void radioProtInteiraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioProtInteiraActionPerformed
        
        checkD1.setEnabled( false );
        checkD2.setEnabled( false );
        checkD3.setEnabled( false );
        checkFront.setEnabled( false );
        
    }//GEN-LAST:event_radioProtInteiraActionPerformed

    private void radioPorDominioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioPorDominioActionPerformed
        
        checkD1.setEnabled( true );
        checkD2.setEnabled( true);
        checkD3.setEnabled( true );
        checkFront.setEnabled( true );
        
    }//GEN-LAST:event_radioPorDominioActionPerformed

    private void btnConfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfActionPerformed
        
        AlignAlgorithmsConfigDialog ad = new AlignAlgorithmsConfigDialog( this, true, defaultConfigs, configs );
        ad.setVisible( true );
        
    }//GEN-LAST:event_btnConfActionPerformed

    /**
     * Task to perform sequence alignment (provides thread safety in Swing)
     */
    private class DoAlignmentTask implements Runnable {
        
        JDialog dialog;

        public DoAlignmentTask( JDialog dialog ) {
            this.dialog = dialog;
        }
        
        @Override
        public void run() {
            
            
            
        }
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane areaSaida;
    private javax.swing.JButton btnAlinhar;
    private javax.swing.JButton btnBLA;
    private javax.swing.JButton btnCOL;
    private javax.swing.JButton btnConf;
    private javax.swing.JButton btnDIP;
    private javax.swing.ButtonGroup btnGrpAlgoritmoAlinhamento;
    private javax.swing.ButtonGroup btnGrpTipoAlinhamento;
    private javax.swing.JButton btnHEM;
    private javax.swing.JButton btnHYM;
    private javax.swing.JButton btnISO;
    private javax.swing.JButton btnLEP;
    private javax.swing.JButton btnLimparSelecao;
    private javax.swing.JButton btnNEU;
    private javax.swing.JButton btnORT;
    private javax.swing.JButton btnSelecionarTodas;
    private javax.swing.JButton btnTHY;
    private javax.swing.JButton btnTRI;
    private javax.swing.JCheckBox checkD1;
    private javax.swing.JCheckBox checkD2;
    private javax.swing.JCheckBox checkD3;
    private javax.swing.JCheckBox checkFront;
    private javax.swing.JLabel lblAguarde;
    private javax.swing.JPanel painel;
    private javax.swing.JPanel painelAlgoritmos;
    private javax.swing.JPanel painelAlinhamento;
    private javax.swing.JPanel painelSaida;
    private javax.swing.JPanel painelSelecoes;
    private javax.swing.JRadioButton radioClustalO;
    private javax.swing.JRadioButton radioClustalW;
    private javax.swing.JRadioButton radioMUSCLE;
    private javax.swing.JRadioButton radioPorDominio;
    private javax.swing.JRadioButton radioProtInteira;
    private javax.swing.JScrollPane spProteinas;
    private javax.swing.JScrollPane spSaida;
    private javax.swing.JTable tabelaProteinas;
    // End of variables declaration//GEN-END:variables
}
