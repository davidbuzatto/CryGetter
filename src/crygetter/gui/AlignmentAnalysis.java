/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package crygetter.gui;

import crygetter.model.AminoAcid;
import crygetter.model.AminoAcidDifference;
import crygetter.model.CryToxin;
import crygetter.utils.Utils;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import org.biojava.bio.structure.Structure;
import org.biojava.bio.structure.align.gui.jmol.JmolPanel;
import org.biojava.bio.structure.io.PDBFileReader;

/**
 * Alignment analysis dialog.
 * 
 * @author David Buzatto
 */
public class AlignmentAnalysis extends javax.swing.JDialog {

    private DefaultListModel<CryToxin> proteinListModel1;
    private DefaultListModel<CryToxin> proteinListModel2;
    private DefaultListModel<AminoAcidDifference> aaDiffListModel;
    
    private CryToxin selectedCt1;
    private CryToxin selectedCt2;
    
    private JmolPanel jmolPanelAA1;
    private JmolPanel jmolPanelAA2;
    
    private List<CryToxin> ctList;
    private Map<String, List<String>> extractedData;
    private Map<String, AminoAcid> aaData;
    
    private AminoAcidDifference aaDiff;
    private AminoAcid aa1;
    private AminoAcid aa2;
    
    /**
     * Creates new form AlignmentAnalysis
     */
    public AlignmentAnalysis( JDialog parent, boolean modal, List<CryToxin> ctList, Map<String, List<String>> extractedData, Map<String, AminoAcid> aaData ) {
        
        super( parent, modal );
        initComponents();
        
        this.ctList = ctList;
        this.extractedData = extractedData;
        this.aaData = aaData;
        
        proteinListModel1 = new DefaultListModel<>();
        proteinListModel2 = new DefaultListModel<>();
        aaDiffListModel = new DefaultListModel<>();
        
        listProteins1.setModel( proteinListModel1 );
        listProteins2.setModel( proteinListModel2 );
        listDiff.setModel( aaDiffListModel );
        
        listProteins1.setCellRenderer( new CryToxinListCellRenderer() );
        listProteins2.setCellRenderer( new CryToxinListCellRenderer() );
        
        jmolPanelAA1 = (JmolPanel) panelViewAA1;
        jmolPanelAA2 = (JmolPanel) panelViewAA2;
        
        loadProteinLists();
        updateUI();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelProteins = new javax.swing.JPanel();
        panelProtein1 = new javax.swing.JPanel();
        scrollProteins1 = new javax.swing.JScrollPane();
        listProteins1 = new javax.swing.JList<CryToxin>();
        panelProtein2 = new javax.swing.JPanel();
        scrollProteins2 = new javax.swing.JScrollPane();
        listProteins2 = new javax.swing.JList<CryToxin>();
        btnAnalyse = new javax.swing.JButton();
        checkDoNotIncludeGaps = new javax.swing.JCheckBox();
        panelResults = new javax.swing.JPanel();
        panelDiff = new javax.swing.JPanel();
        spDiff = new javax.swing.JScrollPane();
        listDiff = new javax.swing.JList();
        lblPos = new javax.swing.JLabel();
        lblAA1 = new javax.swing.JLabel();
        lblAA2 = new javax.swing.JLabel();
        lblPosVal = new javax.swing.JLabel();
        lblAA1Val = new javax.swing.JLabel();
        lblAA2Val = new javax.swing.JLabel();
        panelContAA1 = new javax.swing.JPanel();
        panelViewAA1 = new JmolPanel();
        btnDetailsAA1 = new javax.swing.JButton();
        panelContAA2 = new javax.swing.JPanel();
        panelViewAA2 = new JmolPanel();
        btnDetailsAA2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Protein Analysis");
        setResizable(false);

        panelProteins.setBorder(javax.swing.BorderFactory.createTitledBorder("Proteins to Analyse"));

        panelProtein1.setBorder(javax.swing.BorderFactory.createTitledBorder("Protein 1"));

        listProteins1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listProteins1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listProteins1ValueChanged(evt);
            }
        });
        scrollProteins1.setViewportView(listProteins1);

        javax.swing.GroupLayout panelProtein1Layout = new javax.swing.GroupLayout(panelProtein1);
        panelProtein1.setLayout(panelProtein1Layout);
        panelProtein1Layout.setHorizontalGroup(
            panelProtein1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProtein1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollProteins1, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelProtein1Layout.setVerticalGroup(
            panelProtein1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProtein1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollProteins1)
                .addContainerGap())
        );

        panelProtein2.setBorder(javax.swing.BorderFactory.createTitledBorder("Protein 2"));

        listProteins2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listProteins2.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listProteins2ValueChanged(evt);
            }
        });
        scrollProteins2.setViewportView(listProteins2);

        javax.swing.GroupLayout panelProtein2Layout = new javax.swing.GroupLayout(panelProtein2);
        panelProtein2.setLayout(panelProtein2Layout);
        panelProtein2Layout.setHorizontalGroup(
            panelProtein2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProtein2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollProteins2, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelProtein2Layout.setVerticalGroup(
            panelProtein2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProtein2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollProteins2)
                .addContainerGap())
        );

        btnAnalyse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crygetter/gui/icons/accept.png"))); // NOI18N
        btnAnalyse.setText("Analyse");
        btnAnalyse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalyseActionPerformed(evt);
            }
        });

        checkDoNotIncludeGaps.setSelected(true);
        checkDoNotIncludeGaps.setText("Do not include gaps");

        javax.swing.GroupLayout panelProteinsLayout = new javax.swing.GroupLayout(panelProteins);
        panelProteins.setLayout(panelProteinsLayout);
        panelProteinsLayout.setHorizontalGroup(
            panelProteinsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProteinsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelProtein1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelProtein2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProteinsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(checkDoNotIncludeGaps)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAnalyse)
                .addContainerGap())
        );
        panelProteinsLayout.setVerticalGroup(
            panelProteinsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProteinsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelProteinsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelProtein2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelProtein1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelProteinsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAnalyse)
                    .addComponent(checkDoNotIncludeGaps))
                .addContainerGap())
        );

        panelResults.setBorder(javax.swing.BorderFactory.createTitledBorder("Results"));

        panelDiff.setBorder(javax.swing.BorderFactory.createTitledBorder("Differences"));

        listDiff.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        listDiff.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listDiff.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listDiffMouseClicked(evt);
            }
        });
        listDiff.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listDiffValueChanged(evt);
            }
        });
        spDiff.setViewportView(listDiff);

        lblPos.setText("Position:");

        lblAA1.setText("AA 1:");

        lblAA2.setText("AA 2:");

        lblPosVal.setText(" ");

        lblAA1Val.setText(" ");

        lblAA2Val.setText(" ");

        javax.swing.GroupLayout panelDiffLayout = new javax.swing.GroupLayout(panelDiff);
        panelDiff.setLayout(panelDiffLayout);
        panelDiffLayout.setHorizontalGroup(
            panelDiffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDiffLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDiffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spDiff, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(panelDiffLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(panelDiffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPos, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAA1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAA2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelDiffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblPosVal, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                            .addComponent(lblAA1Val, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblAA2Val, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelDiffLayout.setVerticalGroup(
            panelDiffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDiffLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spDiff)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDiffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPos)
                    .addComponent(lblPosVal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDiffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAA1)
                    .addComponent(lblAA1Val))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDiffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAA2)
                    .addComponent(lblAA2Val))
                .addGap(31, 31, 31))
        );

        panelContAA1.setBorder(javax.swing.BorderFactory.createTitledBorder("Protein 1 AA"));

        panelViewAA1.setPreferredSize(new java.awt.Dimension(200, 200));

        javax.swing.GroupLayout panelViewAA1Layout = new javax.swing.GroupLayout(panelViewAA1);
        panelViewAA1.setLayout(panelViewAA1Layout);
        panelViewAA1Layout.setHorizontalGroup(
            panelViewAA1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        panelViewAA1Layout.setVerticalGroup(
            panelViewAA1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        btnDetailsAA1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crygetter/gui/icons/information.png"))); // NOI18N
        btnDetailsAA1.setText("Details");
        btnDetailsAA1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailsAA1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelContAA1Layout = new javax.swing.GroupLayout(panelContAA1);
        panelContAA1.setLayout(panelContAA1Layout);
        panelContAA1Layout.setHorizontalGroup(
            panelContAA1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContAA1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelViewAA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDetailsAA1)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        panelContAA1Layout.setVerticalGroup(
            panelContAA1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContAA1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelContAA1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnDetailsAA1)
                    .addComponent(panelViewAA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelContAA2.setBorder(javax.swing.BorderFactory.createTitledBorder("Protein 2 AA"));

        panelViewAA2.setPreferredSize(new java.awt.Dimension(200, 200));

        javax.swing.GroupLayout panelViewAA2Layout = new javax.swing.GroupLayout(panelViewAA2);
        panelViewAA2.setLayout(panelViewAA2Layout);
        panelViewAA2Layout.setHorizontalGroup(
            panelViewAA2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        panelViewAA2Layout.setVerticalGroup(
            panelViewAA2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        btnDetailsAA2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crygetter/gui/icons/information.png"))); // NOI18N
        btnDetailsAA2.setText("Details");
        btnDetailsAA2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailsAA2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelContAA2Layout = new javax.swing.GroupLayout(panelContAA2);
        panelContAA2.setLayout(panelContAA2Layout);
        panelContAA2Layout.setHorizontalGroup(
            panelContAA2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContAA2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelViewAA2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDetailsAA2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelContAA2Layout.setVerticalGroup(
            panelContAA2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContAA2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelContAA2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnDetailsAA2)
                    .addComponent(panelViewAA2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelResultsLayout = new javax.swing.GroupLayout(panelResults);
        panelResults.setLayout(panelResultsLayout);
        panelResultsLayout.setHorizontalGroup(
            panelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelResultsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelDiff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelContAA2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelContAA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelResultsLayout.setVerticalGroup(
            panelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelResultsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelDiff, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelResultsLayout.createSequentialGroup()
                        .addComponent(panelContAA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelContAA2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelProteins, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelResults, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelResults, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelProteins, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(1076, 611));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void listProteins1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listProteins1ValueChanged

        if ( listProteins1 != null ) {

            CryToxin selectedNow = (CryToxin) listProteins1.getSelectedValue();

            if ( selectedNow != null ) {
                selectedCt1 = selectedNow;
            }

        }

    }//GEN-LAST:event_listProteins1ValueChanged

    private void listProteins2ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listProteins2ValueChanged
        
        if ( listProteins2 != null ) {

            CryToxin selectedNow = (CryToxin) listProteins2.getSelectedValue();

            if ( selectedNow != null ) {
                selectedCt2 = selectedNow;
            }

        }
        
    }//GEN-LAST:event_listProteins2ValueChanged

    private void btnAnalyseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalyseActionPerformed
        
        if ( selectedCt1 != null && selectedCt2 != null && selectedCt1 != selectedCt2 ) {
            
            List<String> proteinData1 = extractedData.get( selectedCt1.name );
            List<String> proteinData2 = extractedData.get( selectedCt2.name );
            List<AminoAcidDifference> aaDiffs = new ArrayList<>();
            
            for ( int i = 0; i < proteinData1.size(); i++ ) {
                
                char[] seq1 = proteinData1.get( i ).toCharArray();
                char[] seq2 = proteinData2.get( i ).toCharArray();
                
                for ( int j = 0; j < seq1.length; j++ ) {
                    
                    if ( checkDoNotIncludeGaps.isSelected() ) {
                        if ( seq1[j] != seq2[j] && seq1[j] != '-' && seq2[j] != '-' ) {
                            aaDiffs.add( new AminoAcidDifference( seq1[j], seq2[j], (i * 60) + j + 1 ) );
                        }
                    } else {
                        if ( seq1[j] != seq2[j] ) {
                            aaDiffs.add( new AminoAcidDifference( seq1[j], seq2[j], (i * 60) + j + 1 ) );
                        }
                    }
                    
                }
                
            }
            
            if ( !aaDiffs.isEmpty() ) {
                
                aaDiffListModel.clear();
                
                for ( AminoAcidDifference aad : aaDiffs ) {
                    aaDiffListModel.addElement( aad );
                }
                
            } else {
                JOptionPane.showMessageDialog( this, "There are no differences between the\n"
                        + "proteins \"" + selectedCt1.name + "\" and \"" + selectedCt2.name + "\"", 
                        "Information", JOptionPane.INFORMATION_MESSAGE );
            }
            
        } else {
            JOptionPane.showMessageDialog( this, "You must select two different proteins to analyse.",
                    "Warning", JOptionPane.WARNING_MESSAGE );
        }
        
        aaDiff = null;
        aa1 = null;
        aa2 = null;
        
        updateUI();
        
    }//GEN-LAST:event_btnAnalyseActionPerformed

    private void listDiffMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listDiffMouseClicked
        
        /*if ( listDiff.getSelectedValue() != null ) {
            
            aaDiff = (AminoAcidDifference) listDiff.getSelectedValue();
            aa1 = aaData.get( String.valueOf( aaDiff.aa1 ) );
            aa2 = aaData.get( String.valueOf( aaDiff.aa2 ) );
            
            updateUI();
            
        }*/
        
    }//GEN-LAST:event_listDiffMouseClicked

    private void btnDetailsAA1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailsAA1ActionPerformed
        
        if ( aa1 != null ) {
            AminoAcidDetails aad = new AminoAcidDetails( this, true, aa1 );
            aad.setVisible( true );
        }
        
    }//GEN-LAST:event_btnDetailsAA1ActionPerformed

    private void btnDetailsAA2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailsAA2ActionPerformed
        
        if ( aa2 != null ) {
            AminoAcidDetails aad = new AminoAcidDetails( this, true, aa2 );
            aad.setVisible( true );
        }
        
    }//GEN-LAST:event_btnDetailsAA2ActionPerformed

    private void listDiffValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listDiffValueChanged
        
        if ( listDiff.getSelectedValue() != null ) {
            
            aaDiff = (AminoAcidDifference) listDiff.getSelectedValue();
            aa1 = aaData.get( String.valueOf( aaDiff.aa1 ) );
            aa2 = aaData.get( String.valueOf( aaDiff.aa2 ) );
            
            updateUI();
            
        }
        
    }//GEN-LAST:event_listDiffValueChanged

    private void loadProteinLists() {
        
        for ( Entry<String, List<String>> e : extractedData.entrySet() ) {
            
            if ( !e.getKey().equals( "aln" ) ) {
                
                for ( int i = 0; i < ctList.size(); i++ ) {
                    
                    CryToxin ct = ctList.get( i );
                    
                    if ( ct.name.equals( e.getKey() ) ) {
                        proteinListModel1.addElement( ct );
                        proteinListModel2.addElement( ct );
                    }
                    
                }
                
            }
            
        }
        
        listProteins1.updateUI();
        listProteins2.updateUI();
        
    }
    
    private void updateUI() {
        
        PDBFileReader pdbr = new PDBFileReader();
        
        try {
            
            if ( aaDiff == null ) {

                lblPosVal.setText( " " );
                lblAA1Val.setText( " " );
                lblAA2Val.setText( " " );

                jmolPanelAA1.setStructure( pdbr.getStructure( getClass().getResource( "/clean.pdb" ) ) );
                jmolPanelAA2.setStructure( pdbr.getStructure( getClass().getResource( "/clean.pdb" ) ) );
                jmolPanelAA1.getViewer().runScript( "zoom 1" );
                jmolPanelAA2.getViewer().runScript( "zoom 1" );

            } else {

                lblPosVal.setText( String.valueOf( aaDiff.position ) );
                lblAA1Val.setText( String.valueOf( aaDiff.aa1 ) );
                lblAA2Val.setText( String.valueOf( aaDiff.aa2 ) );

                Structure strucAA1;
                Structure strucAA2;

                if ( aa1 != null ) {
                    strucAA1 = pdbr.getStructure( getClass().getResource( aa1.pdbFile ) );
                } else {
                    strucAA1 = pdbr.getStructure( getClass().getResource( "/clean.pdb" ) );
                }
                jmolPanelAA1.setStructure( strucAA1 );
                
                if ( aa2 != null ) {
                    strucAA2 = pdbr.getStructure( getClass().getResource( aa2.pdbFile ) );
                } else {
                    strucAA2 = pdbr.getStructure( getClass().getResource( "/clean.pdb" ) );
                }
                jmolPanelAA2.setStructure( strucAA2 );
                
                if ( aa1 == null ) {
                    jmolPanelAA1.getViewer().runScript( "zoom 1" );
                }
                
                if ( aa2 == null ) {
                    jmolPanelAA2.getViewer().runScript( "zoom 1" );
                }
                
            }
            
        } catch ( IOException exc ) {
            Utils.showExceptionMessage( this, exc );
        }
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnalyse;
    private javax.swing.JButton btnDetailsAA1;
    private javax.swing.JButton btnDetailsAA2;
    private javax.swing.JCheckBox checkDoNotIncludeGaps;
    private javax.swing.JLabel lblAA1;
    private javax.swing.JLabel lblAA1Val;
    private javax.swing.JLabel lblAA2;
    private javax.swing.JLabel lblAA2Val;
    private javax.swing.JLabel lblPos;
    private javax.swing.JLabel lblPosVal;
    private javax.swing.JList listDiff;
    private javax.swing.JList<CryToxin> listProteins1;
    private javax.swing.JList<CryToxin> listProteins2;
    private javax.swing.JPanel panelContAA1;
    private javax.swing.JPanel panelContAA2;
    private javax.swing.JPanel panelDiff;
    private javax.swing.JPanel panelProtein1;
    private javax.swing.JPanel panelProtein2;
    private javax.swing.JPanel panelProteins;
    private javax.swing.JPanel panelResults;
    private javax.swing.JPanel panelViewAA1;
    private javax.swing.JPanel panelViewAA2;
    private javax.swing.JScrollPane scrollProteins1;
    private javax.swing.JScrollPane scrollProteins2;
    private javax.swing.JScrollPane spDiff;
    // End of variables declaration//GEN-END:variables
}
